@model Order


<div class="p-2 p-md-2 pt-0 pt-md-0 text-dark">
        <form asp-controller="Orders"
              asp-action="AddOrUpdateOrder" method="post">

            <div class="form-group ">
                <label asp-for="Id">Код заказа</label>
                <input asp-for="Id" class="form-control" readonly />
                <span class="text-danger" asp-validation-for="Id"></span>
            </div>

            <div class="form-group border-1">
                <label asp-for="DateAdded">Дата добавления</label>
            <input asp-for="DateAdded" class="form-control" type="date" readonly />
                <span class="text-danger" asp-validation-for="DateAdded"></span>
                <hr class="border-top">
            </div>

            <div class="form-group">
                <label asp-for="Status">Статус заказа</label>
                <select asp-for="Status" class="form-control">
                    <option disabled selected>Выберите клиента</option>
                    <option selected>В очереди</option>
                    <option >В работе</option>
                    <option >Завершён</option>
                </select>
                <span class="text-danger" asp-validation-for="Status"></span>
                <hr class="border-top">
            </div>

            <div class="form-group">
                <label asp-for="Customer">Клиент</label>
                <select asp-for="CustomerId" class="form-control" id="cust-select">
                    @if (Model.Id == 0)
                    {
                        <option disabled selected>Выберите клиента</option>
                    }
                    @foreach (Customer c in ViewBag.Customers)
                    {
                        <option selected="@(Model.Customer?.Id == c.Id)" data-car-id="@c.Id" value="@c.Id">@c.Name</option>
                    }
                </select>
                <span class="text-danger" asp-validation-for="Customer"></span>
                <hr class="border-top">
            </div>

            <div class="form-group">
                <label asp-for="Car">Машина</label>
                <select asp-for="Car" class="form-control">
                    @foreach (Customer cust in ViewBag.Customers)
                    {
                        @*if (cust.Id == resultClickCar)
                    {*@
                        @foreach (Car car in cust.Cars)
                        {
                            <option>@car.Name</option>
                        }

                        @*}*@

                    }
                </select>
                <span class="text-danger" asp-validation-for="Car"></span>
                <hr class="border-top">
            </div>
            @*<option selected="@(Model.Customer?.Id == cust.Id)" value="@cust.Id">@cust.Cars</option>*@
            <div class="form-group">
                <label asp-for="DateStart">Дата начала</label>
                <input asp-for="DateStart" class="form-control" type="date" />
                <span class="text-danger" asp-validation-for="DateStart"></span>
                <hr class="border-top">
            </div>

            <div class="form-group">
                <label asp-for="DateFinish">Дата окончания</label>
                <input asp-for="DateFinish" class="form-control" type="date" />
                <span class="text-danger" asp-validation-for="DateFinish"></span>
                <hr class="border-top">
            </div>


            <div>
            
                <div class="d-flex flex-column justify-content-center align-items-center">

                    <h6 class="mt-1 mb-1 p-2  bg-primary text-white text-center col-12">Выбранные услуги</h6>

                 <button type="button" class="btn btn-primary " data-toggle="modal" data-target="#myModal">
                    Добавление новой услуги
                </button>
                </div>
            </div>

        
            <table class="table ">
                <thead>
                    <tr>
                        <th class="col-3 font-weight-bold">Услуга</th>
                        <th class="col-1 font-weight-bold">Количество</th>
                        <th class="col-1 font-weight-bold">Цена</th>
                    </tr>
               </thead>
                <tbody id="tbody">
                    @{
                        int counter = 0;
                    }
                    @foreach (OrderLine line in ViewBag.Lines)
                    {
                        if (Model.Id == 0)
                        {
                            <input type="hidden" name="lines[@counter].Id" value="@line.Id" />
                            <input type="hidden" name="lines[@counter].ProductId" value="@line.ProductId" />
                            <input type="hidden" name="lines[@counter].OrderId" value="@Model.Id" />
                       
                            <tr>
                                <td class="col-3">@line.Product.Name</td>
                                <td class="col-3">@line.Product.RetailPrice</td>
                                <td class="col-1">
                                    <input type="number" class="form-control form-control-sm"
                                           name="lines[@counter].Quantity" value="@line.Quantity" />
                                </td>
                            </tr>
                        }
                        else if (line.Quantity > 0)
                        {
                            <input type="hidden" name="lines[@counter].Id" value="@line.Id" />
                            <input type="hidden" name="lines[@counter].ProductId" value="@line.ProductId" />
                            <input type="hidden" name="lines[@counter].OrderId" value="@Model.Id" />

                            <tr>
                                <td class="col-3">@line.Product.Name</td>
                                <td class="col-3">@line.Product.RetailPrice</td>    
                                <td class="col-1">
                                    <input type="number" class="form-control form-control-sm"
                                           name="lines[@counter].Quantity" value="@line.Quantity" />
                                </td>
                            </tr>

                        }

                        counter++;
                    }

    </tbody>
                <tfoot>
                    <tr>
                    <th class="text-left"><label asp-for="CustomerPrice">Общая стоимость:</label></th>
                    <td class="col-1  text-right" colspan="2">
                            <input asp-for="CustomerPrice" class="form-control text-right" readonly/> <!-- Этот элемент будет показывать общую стоимость -->
                            <input type="hidden" asp-for="SalonPrice" class="form-control" /> <!-- Этот элемент будет показывать общую стоимость -->
                            
                        </td>
                    </tr>
                </tfoot>
            </table>

        



            <div class="text-center m-2">
                <button type="submit" class="btn btn-primary">Сохранить</button>
                <a asp-action="Index" class="btn btn-secondary">Отмена</a>
            </div>
        </form>
    </div>

@*calculateCustomerPrice*@
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Получаем ссылку на элемент tbody
        const tbody = document.getElementById("tbody");

        // Получаем все элементы <input> с именем "Quantity" внутри tbody
        const quantityInputs = tbody.querySelectorAll("input[name^='lines['][name$='].Quantity']");

        // Функция для вычисления общей стоимости
        function calculateTotalPrice() {
let totalPrice = 0;
    quantityInputs.forEach(input => {
        const quantity = parseInt(input.value, 10);
        const priceText = input.closest("tr").querySelector(".col-3:nth-child(2)").textContent;
        const price = parseFloat(priceText.replace(",", "."));

        if (!isNaN(quantity) && !isNaN(price)) {
            totalPrice += quantity * price;
        }
    });

    const formattedTotalPrice = totalPrice.toFixed(2).replace(".", ","); // Заменяем точку на запятую
    console.log("Customer Price:", formattedTotalPrice);

    document.getElementById("CustomerPrice").value = formattedTotalPrice;
    document.querySelector('input[name="CustomerPrice"]').value = formattedTotalPrice;

        }

        // Обработчик события изменения для каждого поля ввода количества услуг
        quantityInputs.forEach(input => {
            input.addEventListener("change", calculateTotalPrice);
        });

    const form = document.querySelector('form');
    form.addEventListener('submit', function (event) {
        calculateTotalPrice(); // Вызываем функцию для обновления SalonPrice перед отправкой
    });
    });
</script>


<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Заголовок модального окна</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <form asp-controller="Orders" asp-action="AddOrderLine" method="post" class="modal-body">
                <input type="hidden" asp-for="Id"/>
                <input type="hidden" asp-for="DateAdded"/>
                <input type="hidden" asp-for="CustomerId"/>
                <input type="hidden" asp-for="Car"/>

                <input type="hidden" asp-for="Status"/>
                <input type="hidden" asp-for="DateStart"/>
                <input type="hidden" asp-for="DateFinish"/>
                @{
                    int innerCounter = 0;
                }
                @foreach (OrderLine line in ViewBag.Lines)
                {

                    <input type="hidden" name="lines[@innerCounter].Id" value="@line.Id" />
                    <input type="hidden" name="lines[@innerCounter].ProductId" value="@line.ProductId" />
                    <input type="hidden" name="lines[@innerCounter].OrderId" value="@Model.Id" />
                    <div class="row my-1">
                        <div class="col">@line.Product.Name</div>
                        <div class="col">
                            <input type="number" name="lines[@innerCounter].Quantity"
                                   value="@line.Quantity" />
                        </div>
                    </div>


                    innerCounter++;
                }
                
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                    <button type="submit" class="btn btn-primary" >Сохранить</button>
                </div>
            </form>


        </div>
    </div>
</div>


<script>
    function submitForm() {
        // Получаем все элементы input с именем "lines[x].Quantity"
        var quantityInputs = document.querySelectorAll('input[name^="lines["][name$="].Quantity"]');

        // Создаем массив для хранения выбранных элементов OrderLine
        var selectedLines = [];

        // Проходим по всем элементам и фильтруем только те, у которых Quantity > 0
        for (var i = 0; i < quantityInputs.length; i++) {
            var quantity = parseInt(quantityInputs[i].value);
            if (quantity > 0) {
                // Находим элемент OrderLine по индексу "x" в имени input
                var index = quantityInputs[i].name.match(/\[(\d+)\]/)[1];
                var line = {
                    Id: document.querySelector('input[name="lines[' + index + '].Id"]').value,
                    ProductId: document.querySelector('input[name="lines[' + index + '].ProductId"]').value,
                    OrderId: document.querySelector('input[name="lines[' + index + '].OrderId"]').value,
                    Quantity: quantity
                };
                // Добавляем элемент OrderLine в массив
                selectedLines.push(line);
            }
        }

        // Создаем новую форму и добавляем в нее только выбранные элементы OrderLine
        var form = document.createElement('form');
        form.action = '/Orders/AddOrderLine'; // Замените на свой URL
        form.method = 'POST';

        for (var i = 0; i < selectedLines.length; i++) {
            var line = selectedLines[i];
            var idInput = document.createElement('input');
            idInput.type = 'hidden';
            idInput.name = 'lines[' + i + '].Id';
            idInput.value = line.Id;
            form.appendChild(idInput);

            var productIdInput = document.createElement('input');
            productIdInput.type = 'hidden';
            productIdInput.name = 'lines[' + i + '].ProductId';
            productIdInput.value = line.ProductId;
            form.appendChild(productIdInput);

            var orderIdInput = document.createElement('input');
            orderIdInput.type = 'hidden';
            orderIdInput.name = 'lines[' + i + '].OrderId';
            orderIdInput.value = line.OrderId;
            form.appendChild(orderIdInput);

            var quantityInput = document.createElement('input');
            quantityInput.type = 'hidden';
            quantityInput.name = 'lines[' + i + '].Quantity';
            quantityInput.value = line.Quantity;
            form.appendChild(quantityInput);
        }

        // Добавляем форму на страницу и отправляем
        document.body.appendChild(form);
        form.submit();
    }
</script>


@*calculateTotalPrice*@
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Получаем ссылку на элемент tbody
        const tbody = document.getElementById("tbody");

        // Получаем все элементы <input> с именем "Quantity" внутри tbody
        const quantityInputs = tbody.querySelectorAll("input[name^='lines['][name$='].Quantity']");

        // Функция для вычисления общей стоимости
        function calculateTotalPrice() {
            let totalPrice = 0;
            quantityInputs.forEach(input => {
                const quantity = parseInt(input.value, 10); // Получаем значение количества услуг
                const price = parseFloat(input.closest("tr").querySelector(".col-3:nth-child(2)").textContent); // Получаем стоимость услуги из соседнего элемента

                if (!isNaN(quantity) && !isNaN(price)) {
                    totalPrice += quantity * price;
                }
            });

            // Обновляем текст в элементе, показывающем общую стоимость
            document.getElementById("SalonPrice").textContent = totalPrice.toFixed(2);
        }

        // Обработчик события изменения для каждого поля ввода количества услуг
        quantityInputs.forEach(input => {
            input.addEventListener("change", calculateTotalPrice);
        });

        // Вызываем функцию для начального вычисления общей стоимости
        calculateTotalPrice();
    });
</script>
